{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFormazione2021"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageformazione2021.dfs.core.windows.net"
		},
		"EventTriggerSisal_properties_copySisal_withEventTrigger_parameters_SourcePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"EventTriggerSisal_properties_copySisal_withEventTrigger_parameters_SourceFile": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"EventTriggerSisal_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/81c292d0-8976-4aa6-8c7c-a15141cda8df/resourceGroups/Formazione2021/providers/Microsoft.Storage/storageAccounts/storageformazione2021"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DfReportInboundB2cDetailsId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DfReportInboundB2cFileId",
						"type": "uniqueidentifier"
					},
					{
						"name": "Mese",
						"type": "varchar"
					},
					{
						"name": "GiornoSettimana",
						"type": "varchar"
					},
					{
						"name": "Servizio",
						"type": "varchar"
					},
					{
						"name": "Giorno",
						"type": "date"
					},
					{
						"name": "Campagna",
						"type": "varchar"
					},
					{
						"name": "FasciaOraria",
						"type": "varchar"
					},
					{
						"name": "NumeroChiamante",
						"type": "varchar"
					},
					{
						"name": "Settimana",
						"type": "varchar"
					},
					{
						"name": "Offerte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Completate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Servite",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiteCompletate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiteSubito",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_0_10",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_10_20",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_20_30",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_30_40",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_40_50",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_50_60",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_60_120",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_120_180",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_180_240",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_Oltre_240",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompletateAbbandonataInCoda",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_0_10",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_10_20",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_20_30",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_30_40",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_40_50",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_50_60",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_60_120",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_120_180",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_180_240",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TempoDiCodaSecs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TempoDiConversazioneChiamata",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DfReportInboundB2cDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DfReportInboundB2cDetailsId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DfReportInboundB2cFileId",
						"type": "uniqueidentifier"
					},
					{
						"name": "Mese",
						"type": "varchar"
					},
					{
						"name": "GiornoSettimana",
						"type": "varchar"
					},
					{
						"name": "Servizio",
						"type": "varchar"
					},
					{
						"name": "Giorno",
						"type": "date"
					},
					{
						"name": "Campagna",
						"type": "varchar"
					},
					{
						"name": "FasciaOraria",
						"type": "varchar"
					},
					{
						"name": "NumeroChiamante",
						"type": "varchar"
					},
					{
						"name": "Settimana",
						"type": "varchar"
					},
					{
						"name": "Offerte",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Completate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Servite",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiteCompletate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ServiteSubito",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_0_10",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_10_20",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_20_30",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_30_40",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_40_50",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_50_60",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_60_120",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_120_180",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_180_240",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accodate_Oltre_240",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompletateAbbandonataInCoda",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_0_10",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_10_20",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_20_30",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_30_40",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_40_50",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_50_60",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_60_120",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_120_180",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbbInCoda_180_240",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TempoDiCodaSecs",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TempoDiConversazioneChiamata",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DfReportInboundB2cDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Report Inbound_SisalPay B2C.csv",
						"fileSystem": "importazione"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Mese dell'anno",
						"type": "String"
					},
					{
						"name": "Giorno della settimana",
						"type": "String"
					},
					{
						"name": "Servizio",
						"type": "String"
					},
					{
						"name": "Giorno",
						"type": "String"
					},
					{
						"name": "Campagna di uscita Chiamata",
						"type": "String"
					},
					{
						"name": "Fascia 60'",
						"type": "String"
					},
					{
						"name": "Numero chiamante",
						"type": "String"
					},
					{
						"name": "Settimana",
						"type": "String"
					},
					{
						"name": "Offerte",
						"type": "String"
					},
					{
						"name": "Completate",
						"type": "String"
					},
					{
						"name": "Servite",
						"type": "String"
					},
					{
						"name": "Servite e Completate",
						"type": "String"
					},
					{
						"name": "Servite Subito",
						"type": "String"
					},
					{
						"name": "Accodate",
						"type": "String"
					},
					{
						"name": "Accodate 0-10",
						"type": "String"
					},
					{
						"name": "Accodate 10-20",
						"type": "String"
					},
					{
						"name": "Accodate 20-30",
						"type": "String"
					},
					{
						"name": "Accodate 30-40",
						"type": "String"
					},
					{
						"name": "Accodate 40-50",
						"type": "String"
					},
					{
						"name": "Accodate 50-60",
						"type": "String"
					},
					{
						"name": "Accodate 60-120",
						"type": "String"
					},
					{
						"name": "Accodate 120-180",
						"type": "String"
					},
					{
						"name": "Accodate 180-240",
						"type": "String"
					},
					{
						"name": "Accodate oltre 240",
						"type": "String"
					},
					{
						"name": "Completate (abbandonata) in coda",
						"type": "String"
					},
					{
						"name": "Abb. in coda 0-10",
						"type": "String"
					},
					{
						"name": "Abb. in coda 10-20",
						"type": "String"
					},
					{
						"name": "Abb. in coda 20-30",
						"type": "String"
					},
					{
						"name": "Abb. in coda 30-40",
						"type": "String"
					},
					{
						"name": "Abb. in coda 40-50",
						"type": "String"
					},
					{
						"name": "Abb. in coda 50-60",
						"type": "String"
					},
					{
						"name": "Abb. in coda 60-120",
						"type": "String"
					},
					{
						"name": "Abb. in coda 120-180",
						"type": "String"
					},
					{
						"name": "Abb. in coda 180-240",
						"type": "String"
					},
					{
						"name": "Tempo di coda Secs",
						"type": "String"
					},
					{
						"name": "Tempo di conversazione Chiamata",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputExcel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nomefile": {
						"type": "string",
						"defaultValue": "Report Inbound_SisalPay B2C Small.xlsx"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Base Dati",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().nomefile",
							"type": "Expression"
						},
						"container": "importazione"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Mese dell'anno",
						"type": "String"
					},
					{
						"name": "Giorno della settimana",
						"type": "String"
					},
					{
						"name": "Servizio",
						"type": "String"
					},
					{
						"name": "Giorno",
						"type": "String"
					},
					{
						"name": "Campagna di uscita Chiamata",
						"type": "String"
					},
					{
						"name": "Fascia 60'",
						"type": "String"
					},
					{
						"name": "Numero chiamante",
						"type": "String"
					},
					{
						"name": "Settimana",
						"type": "String"
					},
					{
						"name": "Offerte",
						"type": "String"
					},
					{
						"name": "Completate",
						"type": "String"
					},
					{
						"name": "Servite",
						"type": "String"
					},
					{
						"name": "Servite e Completate",
						"type": "String"
					},
					{
						"name": "Servite Subito",
						"type": "String"
					},
					{
						"name": "Accodate",
						"type": "String"
					},
					{
						"name": "Accodate 0-10",
						"type": "String"
					},
					{
						"name": "Accodate 10-20",
						"type": "String"
					},
					{
						"name": "Accodate 20-30",
						"type": "String"
					},
					{
						"name": "Accodate 30-40",
						"type": "String"
					},
					{
						"name": "Accodate 40-50",
						"type": "String"
					},
					{
						"name": "Accodate 50-60",
						"type": "String"
					},
					{
						"name": "Accodate 60-120",
						"type": "String"
					},
					{
						"name": "Accodate 120-180",
						"type": "String"
					},
					{
						"name": "Accodate 180-240",
						"type": "String"
					},
					{
						"name": "Accodate oltre 240",
						"type": "String"
					},
					{
						"name": "Completate (abbandonata) in coda",
						"type": "String"
					},
					{
						"name": "Abb. in coda 0-10",
						"type": "String"
					},
					{
						"name": "Abb. in coda 10-20",
						"type": "String"
					},
					{
						"name": "Abb. in coda 20-30",
						"type": "String"
					},
					{
						"name": "Abb. in coda 30-40",
						"type": "String"
					},
					{
						"name": "Abb. in coda 40-50",
						"type": "String"
					},
					{
						"name": "Abb. in coda 50-60",
						"type": "String"
					},
					{
						"name": "Abb. in coda 60-120",
						"type": "String"
					},
					{
						"name": "Abb. in coda 120-180",
						"type": "String"
					},
					{
						"name": "Abb. in coda 180-240",
						"type": "String"
					},
					{
						"name": "Tempo di coda Secs",
						"type": "String"
					},
					{
						"name": "Tempo di conversazione Chiamata",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copySisal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LeggiMetadati",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE\nDfReportInboundB2cDetails",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Mese dell'anno",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mese",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Giorno della settimana",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GiornoSettimana",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Servizio",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Servizio",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Settimana",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Settimana",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offerte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offerte",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Completate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Completate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Servite",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Servite",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Servite e Completate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiteCompletate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Servite Subito",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiteSubito",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 0-10",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_0_10",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 10-20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_10_20",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 20-30",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_20_30",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 30-40",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_30_40",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 40-50",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_40_50",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 50-60",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_50_60",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 60-120",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_60_120",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 120-180",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_120_180",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 180-240",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_180_240",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate oltre 240",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_Oltre_240",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Completate (abbandonata) in coda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompletateAbbandonataInCoda",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 0-10",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_0_10",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 10-20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_10_20",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 20-30",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_20_30",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 30-40",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_30_40",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 40-50",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_40_50",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 50-60",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_50_60",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 60-120",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_60_120",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 120-180",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_120_180",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 180-240",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_180_240",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InputExcel",
								"type": "DatasetReference",
								"parameters": {
									"nomefile": {
										"value": "@activity('LeggiMetadati').output",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Notification",
						"description": "Connect to Microsys Framework for notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Delete File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api-master-msysfx.azurewebsites.net/api/Notification/Create",
							"method": "POST",
							"headers": {
								"msysfx-app-name": "Microsys.EAI",
								"msysfx-secret-key": "YzNCbGNtbGhiVzhnYzJsaElHRmlZbUZ6ZEdGdWVtRWdjMmxqZFhKdg=="
							},
							"body": {
								"value": "{\n  \"ApplicationName\": \"Microsys.EAI\",\n  \"FlowGroup\": \"INT_DATAFACTORY\",\n  \"FlowInstanceId\": \"@{pipeline().RunId} \",\n  \"FlowName\": \"@{pipeline().Pipeline}\",\n  \"FlowDescription\": \"AD Formazione 2021\",\n  \"MessageText\": \"@{activity('CopyActivity').Status}\",\n  \"MessageNote\": \"Some note\",\n  \"MessageCategory\": \"Error\",\n  \"MessageSeverity\": \"Error\",\n  \"SourceIdentifier\": \"DF\"\n} ",
								"type": "Expression"
							}
						}
					},
					{
						"name": "AggiornaBAM",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Notification",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-master-msysfx.azurewebsites.net/api/Bam/WriteActivity?activityId=@{pipeline().RunId}&activityName=Report%20Inbound%20B2C",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"msysfx-app-name": "Microsys.EAI",
								"msysfx-secret-key": "YzNCbGNtbGhiVzhnYzJsaElHRmlZbUZ6ZEdGdWVtRWdjMmxqZFhKdg=="
							},
							"body": [
								{
									"FieldName": "instanceId",
									"FieldValue": "@{pipeline().RunId}"
								},
								{
									"FieldName": "File Name",
									"FieldValue": "@{activity('Leggimetadati').output.itemName}"
								},
								{
									"FieldName": "resultCode",
									"FieldValue": "Succeded"
								}
							]
						}
					},
					{
						"name": "LeggiMetadati",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputExcel",
								"type": "DatasetReference",
								"parameters": {
									"nomefile": "Report Inbound_SisalPay B2C Small.xlsx"
								}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Delete File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Staging on fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputExcel",
								"type": "DatasetReference",
								"parameters": {
									"nomefile": "Report Inbound_SisalPay B2C.xlsx"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "importazione"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Staging on fact",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[b2cinsertfact]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputExcel')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copySisal_withEventTrigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Leggimetadati",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Mese dell'anno",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mese",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Giorno della settimana",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GiornoSettimana",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Servizio",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Servizio",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Settimana",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Settimana",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offerte",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offerte",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Completate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Completate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Servite",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Servite",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Servite e Completate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiteCompletate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Servite Subito",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiteSubito",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 0-10",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_0_10",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 10-20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_10_20",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 20-30",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_20_30",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 30-40",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_30_40",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 40-50",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_40_50",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 50-60",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_50_60",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 60-120",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_60_120",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 120-180",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_120_180",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate 180-240",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_180_240",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Accodate oltre 240",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accodate_Oltre_240",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Completate (abbandonata) in coda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompletateAbbandonataInCoda",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 0-10",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_0_10",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 10-20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_10_20",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 20-30",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_20_30",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 30-40",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_30_40",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 40-50",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_40_50",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 50-60",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_50_60",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 60-120",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_60_120",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 120-180",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_120_180",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Abb. in coda 180-240",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AbbInCoda_180_240",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InputExcel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Notification",
						"description": "Connect to Microsys Framework for notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api-master-msysfx.azurewebsites.net/api/Notification/Create",
							"method": "POST",
							"headers": {
								"msysfx-app-name": "Microsys.EAI",
								"msysfx-secret-key": "YzNCbGNtbGhiVzhnYzJsaElHRmlZbUZ6ZEdGdWVtRWdjMmxqZFhKdg=="
							},
							"body": {
								"value": "{\n  \"ApplicationName\": \"Microsys.EAI\",\n  \"FlowGroup\": \"INT_DATAFACTORY\",\n  \"FlowInstanceId\": \"@{pipeline().RunId} \",\n  \"FlowName\": \"@{pipeline().Pipeline}\",\n  \"FlowDescription\": \"AD Formazione 2021\",\n  \"MessageText\": \"@{activity('CopyActivity').Status}\",\n  \"MessageNote\": \"Some note\",\n  \"MessageCategory\": \"Error\",\n  \"MessageSeverity\": \"Error\",\n  \"SourceIdentifier\": \"DF\"\n} ",
								"type": "Expression"
							}
						}
					},
					{
						"name": "AggiornaBAM",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Notification",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-master-msysfx.azurewebsites.net/api/Bam/WriteActivity?activityId=@{pipeline().RunId}&activityName=Report%20Inbound%20B2C",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"msysfx-app-name": "Microsys.EAI",
								"msysfx-secret-key": "YzNCbGNtbGhiVzhnYzJsaElHRmlZbUZ6ZEdGdWVtRWdjMmxqZFhKdg=="
							},
							"body": [
								{
									"FieldName": "instanceId",
									"FieldValue": "@{pipeline().RunId}"
								},
								{
									"FieldName": "File Name",
									"FieldValue": "@{activity('Leggimetadati').output.itemName}"
								},
								{
									"FieldName": "resultCode",
									"FieldValue": "Succeded"
								}
							]
						}
					},
					{
						"name": "Leggimetadati",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputExcel",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyActivity",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputExcel",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "importazione"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					}
				],
				"parameters": {
					"SourcePath": {
						"type": "string"
					},
					"SourceFile": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputExcel')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WranglingDataFlow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DelimitedText1",
							"script": "",
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"script": "sink(input(\n\t\tDfReportInboundB2cDetailsId as long,\n\t\tDfReportInboundB2cFileId as string,\n\t\tMese as string,\n\t\tGiornoSettimana as string,\n\t\tServizio as string,\n\t\tGiorno as date,\n\t\tCampagna as string,\n\t\tFasciaOraria as string,\n\t\tNumeroChiamante as string,\n\t\tSettimana as string,\n\t\tOfferte as integer,\n\t\tCompletate as integer,\n\t\tServite as integer,\n\t\tServiteCompletate as integer,\n\t\tServiteSubito as integer,\n\t\tAccodate as integer,\n\t\tAccodate_0_10 as integer,\n\t\tAccodate_10_20 as integer,\n\t\tAccodate_20_30 as integer,\n\t\tAccodate_30_40 as integer,\n\t\tAccodate_40_50 as integer,\n\t\tAccodate_50_60 as integer,\n\t\tAccodate_60_120 as integer,\n\t\tAccodate_120_180 as integer,\n\t\tAccodate_180_240 as integer,\n\t\tAccodate_Oltre_240 as integer,\n\t\tCompletateAbbandonataInCoda as integer,\n\t\tAbbInCoda_0_10 as integer,\n\t\tAbbInCoda_10_20 as integer,\n\t\tAbbInCoda_20_30 as integer,\n\t\tAbbInCoda_30_40 as integer,\n\t\tAbbInCoda_40_50 as integer,\n\t\tAbbInCoda_50_60 as integer,\n\t\tAbbInCoda_60_120 as integer,\n\t\tAbbInCoda_120_180 as integer,\n\t\tAbbInCoda_180_240 as integer,\n\t\tTempoDiCodaSecs as integer,\n\t\tTempoDiConversazioneChiamata as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink1"
						}
					],
					"script": "section Section1;\r\nshared DelimitedText1 = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://storageformazione2021.dfs.core.windows.net/importazione/Report Inbound_SisalPay B2C.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = DelimitedText1\r\nin\r\n  Source;\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\t{Mese dell'anno} as string,\n\t\t{Giorno della settimana} as string,\n\t\tServizio as string,\n\t\tGiorno as string,\n\t\t{Campagna di uscita Chiamata} as string,\n\t\t{Fascia 60'} as string,\n\t\t{Numero chiamante} as string,\n\t\tSettimana as string,\n\t\tOfferte as string,\n\t\tCompletate as string,\n\t\tServite as string,\n\t\t{Servite e Completate} as string,\n\t\t{Servite Subito} as string,\n\t\tAccodate as string,\n\t\t{Accodate 0-10} as string,\n\t\t{Accodate 10-20} as string,\n\t\t{Accodate 20-30} as string,\n\t\t{Accodate 30-40} as string,\n\t\t{Accodate 40-50} as string,\n\t\t{Accodate 50-60} as string,\n\t\t{Accodate 60-120} as string,\n\t\t{Accodate 120-180} as string,\n\t\t{Accodate 180-240} as string,\n\t\t{Accodate oltre 240} as string,\n\t\t{Completate (abbandonata) in coda} as string,\n\t\t{Abb. in coda 0-10} as string,\n\t\t{Abb. in coda 10-20} as string,\n\t\t{Abb. in coda 20-30} as string,\n\t\t{Abb. in coda 30-40} as string,\n\t\t{Abb. in coda 40-50} as string,\n\t\t{Abb. in coda 50-60} as string,\n\t\t{Abb. in coda 60-120} as string,\n\t\t{Abb. in coda 120-180} as string,\n\t\t{Abb. in coda 180-240} as string,\n\t\t{Tempo di coda Secs} as string,\n\t\t{Tempo di conversazione Chiamata} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tlimit: 100,\n\tmoveFiles: ['SampleSisal.xlsx',(concat('FileSisal',toString(currentDate('UTC')), '.xls'))],\n\tinferDriftedColumnTypes: true,\n\tformat: 'excel',\n\tcontainer: 'importazione',\n\tfileName: 'Report Inbound_SisalPay B2C.xlsx',\n\tsheetName: 'Base Dati',\n\tfirstRowAsHeader: true,\n\tdateFormats: ['MM/dd/yyyy'],\n\tpreferredIntegralType: 'long') ~> source1\nsource1 sink(input(\n\t\tDfReportInboundB2cDetailsId as long,\n\t\tDfReportInboundB2cFileId as string,\n\t\tMese as string,\n\t\tGiornoSettimana as string,\n\t\tServizio as string,\n\t\tGiorno as date,\n\t\tCampagna as string,\n\t\tFasciaOraria as string,\n\t\tNumeroChiamante as string,\n\t\tSettimana as string,\n\t\tOfferte as integer,\n\t\tCompletate as integer,\n\t\tServite as integer,\n\t\tServiteCompletate as integer,\n\t\tServiteSubito as integer,\n\t\tAccodate as integer,\n\t\tAccodate_0_10 as integer,\n\t\tAccodate_10_20 as integer,\n\t\tAccodate_20_30 as integer,\n\t\tAccodate_30_40 as integer,\n\t\tAccodate_40_50 as integer,\n\t\tAccodate_50_60 as integer,\n\t\tAccodate_60_120 as integer,\n\t\tAccodate_120_180 as integer,\n\t\tAccodate_180_240 as integer,\n\t\tAccodate_Oltre_240 as integer,\n\t\tCompletateAbbandonataInCoda as integer,\n\t\tAbbInCoda_0_10 as integer,\n\t\tAbbInCoda_10_20 as integer,\n\t\tAbbInCoda_20_30 as integer,\n\t\tAbbInCoda_30_40 as integer,\n\t\tAbbInCoda_40_50 as integer,\n\t\tAbbInCoda_50_60 as integer,\n\t\tAbbInCoda_60_120 as integer,\n\t\tAbbInCoda_120_180 as integer,\n\t\tAbbInCoda_180_240 as integer,\n\t\tTempoDiCodaSecs as integer,\n\t\tTempoDiConversazioneChiamata as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tMese = {Mese dell'anno},\n\t\tGiornoSettimana = {Giorno della settimana},\n\t\tServizio,\n\t\tGiorno,\n\t\tCampagna = {Campagna di uscita Chiamata},\n\t\tFasciaOraria = {Fascia 60'},\n\t\tNumeroChiamante = {Numero chiamante},\n\t\tSettimana,\n\t\tOfferte,\n\t\tCompletate,\n\t\tServite,\n\t\tServiteCompletate = {Servite e Completate},\n\t\tServiteSubito = {Servite Subito},\n\t\tAccodate,\n\t\tAccodate_0_10 = {Accodate 0-10},\n\t\tAccodate_10_20 = {Accodate 10-20},\n\t\tAccodate_20_30 = {Accodate 20-30},\n\t\tAccodate_30_40 = {Accodate 30-40},\n\t\tAccodate_40_50 = {Accodate 40-50},\n\t\tAccodate_50_60 = {Accodate 50-60},\n\t\tAccodate_60_120 = {Accodate 60-120},\n\t\tAccodate_120_180 = {Accodate 120-180},\n\t\tAccodate_180_240 = {Accodate 180-240},\n\t\tAccodate_Oltre_240 = {Accodate oltre 240},\n\t\tCompletateAbbandonataInCoda = {Completate (abbandonata) in coda},\n\t\tAbbInCoda_0_10 = {Abb. in coda 0-10},\n\t\tAbbInCoda_10_20 = {Abb. in coda 10-20},\n\t\tAbbInCoda_20_30 = {Abb. in coda 20-30},\n\t\tAbbInCoda_30_40 = {Abb. in coda 30-40},\n\t\tAbbInCoda_40_50 = {Abb. in coda 40-50},\n\t\tAbbInCoda_50_60 = {Abb. in coda 50-60},\n\t\tAbbInCoda_60_120 = {Abb. in coda 60-120},\n\t\tAbbInCoda_120_180 = {Abb. in coda 120-180},\n\t\tAbbInCoda_180_240 = {Abb. in coda 180-240},\n\t\tTempoDiCodaSecs = {Tempo di coda Secs},\n\t\tTempoDiConversazioneChiamata = {Tempo di coda Secs}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tstringa as string,\n\t\tintero as short,\n\t\tformula as string,\n\t\tfloat as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true,\n\tformat: 'excel',\n\tcontainer: 'importazione',\n\tfileName: 'provaExcel.xlsx',\n\tsheetName: 'Sheet1',\n\tfirstRowAsHeader: true) ~> source1\nsource1 sink(input(\n\t\tDfReportInboundB2cDetailsId as long,\n\t\tDfReportInboundB2cFileId as string,\n\t\tMese as string,\n\t\tGiornoSettimana as string,\n\t\tServizio as string,\n\t\tGiorno as date,\n\t\tCampagna as string,\n\t\tFasciaOraria as string,\n\t\tNumeroChiamante as string,\n\t\tSettimana as string,\n\t\tOfferte as integer,\n\t\tCompletate as integer,\n\t\tServite as integer,\n\t\tServiteCompletate as integer,\n\t\tServiteSubito as integer,\n\t\tAccodate as integer,\n\t\tAccodate_0_10 as integer,\n\t\tAccodate_10_20 as integer,\n\t\tAccodate_20_30 as integer,\n\t\tAccodate_30_40 as integer,\n\t\tAccodate_40_50 as integer,\n\t\tAccodate_50_60 as integer,\n\t\tAccodate_60_120 as integer,\n\t\tAccodate_120_180 as integer,\n\t\tAccodate_180_240 as integer,\n\t\tAccodate_Oltre_240 as integer,\n\t\tCompletateAbbandonataInCoda as integer,\n\t\tAbbInCoda_0_10 as integer,\n\t\tAbbInCoda_10_20 as integer,\n\t\tAbbInCoda_20_30 as integer,\n\t\tAbbInCoda_30_40 as integer,\n\t\tAbbInCoda_40_50 as integer,\n\t\tAbbInCoda_50_60 as integer,\n\t\tAbbInCoda_60_120 as integer,\n\t\tAbbInCoda_120_180 as integer,\n\t\tAbbInCoda_180_240 as integer,\n\t\tTempoDiCodaSecs as integer,\n\t\tTempoDiConversazioneChiamata as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tcampoStringa = stringa,\n\t\tcampoIntero = intero,\n\t\tcampoFormula = formula,\n\t\tcampoNumericoconFormula = float\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SampleSisalImport')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Importazione dati B2C Sisal",
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-19T12:53:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SimpleImport')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-24T20:28:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copySisal_withDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Importazione dati B2C Sisal",
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-19T12:53:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copySisal_withPowerQuery')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WranglingDataFlow1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "WranglingDataFlow1",
								"type": "DataFlowReference",
								"datasetParameters": {
									"DelimitedText1": {},
									"Sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/WranglingDataFlow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EventTriggerSisal')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "copySisal",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "copySisal_withEventTrigger",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourcePath": "[parameters('EventTriggerSisal_properties_copySisal_withEventTrigger_parameters_SourcePath')]",
							"SourceFile": "[parameters('EventTriggerSisal_properties_copySisal_withEventTrigger_parameters_SourceFile')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/importazione/blobs/input",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('EventTriggerSisal_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copySisal')]",
				"[concat(variables('factoryId'), '/pipelines/copySisal_withEventTrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SampleSisalImport",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-09-19T12:56:00Z",
						"endTime": "2020-09-23T20:56:34Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SampleSisalImport')]"
			]
		}
	]
}